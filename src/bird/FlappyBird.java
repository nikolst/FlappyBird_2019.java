package bird;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.Timer;

public class FlappyBird extends javax.swing.JFrame {
    int fallPixels = 1;
    int raisePixels = 0;
    int holeSize = 60;

    Timer birdMover = new Timer(10, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            int birdCurrentX = bird.getX();
            int birdCurrentY = bird.getY();
            birdCurrentY = birdCurrentY + fallPixels - raisePixels;
            bird.setLocation(birdCurrentX, birdCurrentY);
            if (bird.getY() + bird.getHeight() > 310
                    || bird.getY() < 0) {
                gameOverLabel.setVisible(true);
                birdMover.stop();
                pipeMover.stop();
            }

            if (collisionDetection(bird, pipeUp) == true
                    ||
                    collisionDetection(bird, pipeDown) == true) {
                gameOverLabel.setVisible(true);
                birdMover.stop();
                pipeMover.stop();
            }
        }
    });

    Timer pipeMover = new Timer(10, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            int pipesCurrentX = pipeDown.getX() - 1;
            int pipeUpCurrentY = pipeUp.getY();
            int pipeDownCurrentY = pipeDown.getY();
            pipeUp.setLocation(pipesCurrentX, pipeUpCurrentY);
            pipeDown.setLocation(pipesCurrentX, pipeDownCurrentY);

            if (pipesCurrentX + pipeUp.getWidth() < 0) {
                Random r = new Random();
                int initX = 500;
                int initY = r.nextInt(310 - holeSize) - 310;
                pipeDown.setLocation(initX, initY);
                pipeUp.setLocation(initX, initY + 310 + holeSize);
            }
        }
    });

    /**
     * Creates new form FlappyBird2019
     */
    public FlappyBird() {
        initComponents();
        birdMover.start();
        gameOverLabel.setVisible(false);
        Random r = new Random();
        int initX = 600;
        int initY = r.nextInt(310 - holeSize) - 310;
        pipeDown.setLocation(initX, initY);
        pipeUp.setLocation(initX, initY + 310 + holeSize);
        pipeMover.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bird = new javax.swing.JLabel();
        gameOverLabel = new javax.swing.JLabel();
        pipeUp = new javax.swing.JLabel();
        pipeDown = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 350));
        setMinimumSize(new java.awt.Dimension(500, 350));
        setPreferredSize(new java.awt.Dimension(500, 350));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(null);

        bird.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flappybird.jpg"))); // NOI18N
        bird.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(bird);
        bird.setBounds(10, 82, 25, 18);

        gameOverLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        gameOverLabel.setText("GAME OVER");
        getContentPane().add(gameOverLabel);
        gameOverLabel.setBounds(130, 80, 260, 58);

        pipeUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flappypipeup.jpg"))); // NOI18N
        getContentPane().add(pipeUp);
        pipeUp.setBounds(350, 150, 30, 310);

        pipeDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flappypipedown.jpg"))); // NOI18N
        getContentPane().add(pipeDown);
        pipeDown.setBounds(280, -110, 30, 310);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flappybackground.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 500, 310);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        raisePixels = 3;
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        raisePixels = 0;
    }//GEN-LAST:event_formKeyReleased

    boolean collisionDetection(JLabel l1, JLabel l2) {
        if ((l1.getX() > l2.getX()
                && l1.getX() < l2.getX() + l2.getWidth())
                || (l1.getX() + l1.getWidth() > l2.getX()
                && l1.getX() + l1.getWidth() < l2.getX() + l2.getWidth())) {
            if ((l1.getY() > l2.getY()
                    && l1.getY() < l2.getY() + l2.getHeight())
                    || (l1.getY() + l1.getHeight() > l2.getY()
                    && l1.getY() + l1.getHeight() < l2.getY() + l2.getHeight())) {
                return true;
            }
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlappyBird.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlappyBird.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlappyBird.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlappyBird.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlappyBird().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel bird;
    private javax.swing.JLabel gameOverLabel;
    private javax.swing.JLabel pipeDown;
    private javax.swing.JLabel pipeUp;
    // End of variables declaration//GEN-END:variables
}
